<?php

namespace Proxies\__CG__\PrixyBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class formation extends \PrixyBundle\Entity\formation implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'PrixyBundle\\Entity\\formation' . "\0" . 'id', '' . "\0" . 'PrixyBundle\\Entity\\formation' . "\0" . 'ref', '' . "\0" . 'PrixyBundle\\Entity\\formation' . "\0" . 'duree', '' . "\0" . 'PrixyBundle\\Entity\\formation' . "\0" . 'tarif', '' . "\0" . 'PrixyBundle\\Entity\\formation' . "\0" . 'details_formation', '' . "\0" . 'PrixyBundle\\Entity\\formation' . "\0" . 'theme', '' . "\0" . 'PrixyBundle\\Entity\\formation' . "\0" . 'certification', '' . "\0" . 'PrixyBundle\\Entity\\formation' . "\0" . 'session_formation', '' . "\0" . 'PrixyBundle\\Entity\\formation' . "\0" . 'objectif', '' . "\0" . 'PrixyBundle\\Entity\\formation' . "\0" . 'requiert', '' . "\0" . 'PrixyBundle\\Entity\\formation' . "\0" . 'estRequisPour'];
        }

        return ['__isInitialized__', '' . "\0" . 'PrixyBundle\\Entity\\formation' . "\0" . 'id', '' . "\0" . 'PrixyBundle\\Entity\\formation' . "\0" . 'ref', '' . "\0" . 'PrixyBundle\\Entity\\formation' . "\0" . 'duree', '' . "\0" . 'PrixyBundle\\Entity\\formation' . "\0" . 'tarif', '' . "\0" . 'PrixyBundle\\Entity\\formation' . "\0" . 'details_formation', '' . "\0" . 'PrixyBundle\\Entity\\formation' . "\0" . 'theme', '' . "\0" . 'PrixyBundle\\Entity\\formation' . "\0" . 'certification', '' . "\0" . 'PrixyBundle\\Entity\\formation' . "\0" . 'session_formation', '' . "\0" . 'PrixyBundle\\Entity\\formation' . "\0" . 'objectif', '' . "\0" . 'PrixyBundle\\Entity\\formation' . "\0" . 'requiert', '' . "\0" . 'PrixyBundle\\Entity\\formation' . "\0" . 'estRequisPour'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (formation $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setDuree($duree)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDuree', [$duree]);

        return parent::setDuree($duree);
    }

    /**
     * {@inheritDoc}
     */
    public function getDuree()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDuree', []);

        return parent::getDuree();
    }

    /**
     * {@inheritDoc}
     */
    public function setTarif($tarif)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTarif', [$tarif]);

        return parent::setTarif($tarif);
    }

    /**
     * {@inheritDoc}
     */
    public function getTarif()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTarif', []);

        return parent::getTarif();
    }

    /**
     * {@inheritDoc}
     */
    public function addDetailsFormation(\PrixyBundle\Entity\details_formation $detailsFormation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDetailsFormation', [$detailsFormation]);

        return parent::addDetailsFormation($detailsFormation);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDetailsFormation(\PrixyBundle\Entity\details_formation $detailsFormation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDetailsFormation', [$detailsFormation]);

        return parent::removeDetailsFormation($detailsFormation);
    }

    /**
     * {@inheritDoc}
     */
    public function getDetailsFormation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDetailsFormation', []);

        return parent::getDetailsFormation();
    }

    /**
     * {@inheritDoc}
     */
    public function addTheme(\PrixyBundle\Entity\theme $theme)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTheme', [$theme]);

        return parent::addTheme($theme);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTheme(\PrixyBundle\Entity\theme $theme)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTheme', [$theme]);

        return parent::removeTheme($theme);
    }

    /**
     * {@inheritDoc}
     */
    public function getTheme()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTheme', []);

        return parent::getTheme();
    }

    /**
     * {@inheritDoc}
     */
    public function addCertification(\PrixyBundle\Entity\certification $certification)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCertification', [$certification]);

        return parent::addCertification($certification);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCertification(\PrixyBundle\Entity\certification $certification)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCertification', [$certification]);

        return parent::removeCertification($certification);
    }

    /**
     * {@inheritDoc}
     */
    public function getCertification()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCertification', []);

        return parent::getCertification();
    }

    /**
     * {@inheritDoc}
     */
    public function setSessionFormation(\PrixyBundle\Entity\session_formation $sessionFormation = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSessionFormation', [$sessionFormation]);

        return parent::setSessionFormation($sessionFormation);
    }

    /**
     * {@inheritDoc}
     */
    public function getSessionFormation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSessionFormation', []);

        return parent::getSessionFormation();
    }

    /**
     * {@inheritDoc}
     */
    public function setObjectif(\PrixyBundle\Entity\objectif $objectif = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setObjectif', [$objectif]);

        return parent::setObjectif($objectif);
    }

    /**
     * {@inheritDoc}
     */
    public function getObjectif()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getObjectif', []);

        return parent::getObjectif();
    }

    /**
     * {@inheritDoc}
     */
    public function addRequiert(\PrixyBundle\Entity\formation $requiert)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRequiert', [$requiert]);

        return parent::addRequiert($requiert);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRequiert(\PrixyBundle\Entity\formation $requiert)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRequiert', [$requiert]);

        return parent::removeRequiert($requiert);
    }

    /**
     * {@inheritDoc}
     */
    public function getRequiert()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRequiert', []);

        return parent::getRequiert();
    }

    /**
     * {@inheritDoc}
     */
    public function addEstRequisPour(\PrixyBundle\Entity\formation $estRequisPour)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEstRequisPour', [$estRequisPour]);

        return parent::addEstRequisPour($estRequisPour);
    }

    /**
     * {@inheritDoc}
     */
    public function removeEstRequisPour(\PrixyBundle\Entity\formation $estRequisPour)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEstRequisPour', [$estRequisPour]);

        return parent::removeEstRequisPour($estRequisPour);
    }

    /**
     * {@inheritDoc}
     */
    public function getEstRequisPour()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEstRequisPour', []);

        return parent::getEstRequisPour();
    }

    /**
     * {@inheritDoc}
     */
    public function setRef($ref)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRef', [$ref]);

        return parent::setRef($ref);
    }

    /**
     * {@inheritDoc}
     */
    public function getRef()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRef', []);

        return parent::getRef();
    }

}
